# /register

mutation Register($registerInput: RegisterInput!) {
  register(registerInput: $registerInput)
}

# /login, /lti/:ltiUuid

fragment LoginResult on LoginResult {
  username
  rights
  jwt
}

mutation Login($loginInput: LoginInput!) {
  login(loginInput: $loginInput) {
    ...LoginResult
  }
}

mutation ClaimJwt($ltiUuid: String!) {
  claimJwt(ltiUuid: $ltiUuid) {
    ...LoginResult
  }
}

# /changePassword

mutation ChangePassword($changePasswordInput: ChangePasswordInput!) {
  changePassword(changePasswordInput: $changePasswordInput)
}

# /

query AllExercises {
  exercises {
    id
    title
  }
}

# /createExercise

mutation CreateExercise($exerciseInput: GraphQLExerciseInput!) {
  createExercise(exerciseInput: $exerciseInput)
}

# /exercises/:exerciseId

query ExerciseOverview($exerciseId: Int!) {
  exercise(exerciseId: $exerciseId) {
    title
    text
    solutionSubmitted
    allUsersWithSolution
    corrected
    allUsersWithCorrection
  }
}

# /exercise/:exerciseId/solutions/submit

fragment ExerciseTaskDefinition on Exercise {
  title
  text
}

query ExerciseTaskDefinition($exerciseId: Int!) {
  exercise(exerciseId: $exerciseId) {
    ...ExerciseTaskDefinition
  }
}

mutation SubmitSolution($exerciseId: Int!, $userSolution: GraphQLUserSolutionInput!) {
  exerciseMutations(exerciseId: $exerciseId) {
    submitSolution(userSolution: $userSolution)
  }
}

# /exercises/:exerciseId/solutions/:username/correctSolution, /exercises/:exerciseId/solutions/:username/updateCorrection

fragment FlatSolutionNode on FlatSolutionNode {
  id
  childIndex
  text
  applicability
  subTexts {
    text
    applicability
  }
  parentId
}

query CorrectSolutionValues($exerciseId: Int!, $username: String!) {
  exercise(exerciseId: $exerciseId) {
    flatSampleSolution {
      ...FlatSolutionNode
    }
    flatUserSolution(username: $username) {
      ...FlatSolutionNode
    }
    sampleSolutionAsJson
    solutionForUserAsJson(username: $username)
  }
}

query UpdateCorrectionValues($exerciseId: Int!, $username: String!) {
  exercise(exerciseId: $exerciseId) {
    correctionForUserAsJson(username: $username)
  }
}

mutation SubmitCorrection($exerciseId: Int!, $correctionInput: GraphQLCorrectionInput!) {
  exerciseMutations(exerciseId: $exerciseId) {
    submitCorrection(correctionInput: $correctionInput)
  }
}
