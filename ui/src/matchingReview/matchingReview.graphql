# basic data

fragment MatchingReviewExerciseData on Exercise {
  title
  sampleSolutionNodes {
    ...FlatSampleSolutionNode
  }
  usernames: userSolutions {
    username
  }
}

query MatchingReview($exerciseId: Int!) {
  exercise(exerciseId: $exerciseId) {
    ...MatchingReviewExerciseData
  }
}

# single user solution

fragment WordWithRelatedWords on WordWithRelatedWords {
  word
  synonyms
  antonyms
}

fragment SolNodeMatchExplanation on SolutionNodeMatchExplanation {
  wordMatchingResult {
    matches {
      sampleValue {
        ...WordWithRelatedWords
      }
      userValue {
        ...WordWithRelatedWords
      }
      maybeExplanation {
        # TODO!
        __typename
      }
    }
    notMatchedSample {
      ...WordWithRelatedWords
    }
    notMatchedUser {
      ...WordWithRelatedWords
    }
  }
  maybePararaphMatchingResult {
    matches {
      sampleValue {
        ...ParagraphCitation
      }
      userValue {
        ...ParagraphCitation
      }
      maybeExplanation {
        # TODO!
        __typename
      }
    }
    notMatchedSample {
      ...ParagraphCitation
    }
    notMatchedUser {
      ...ParagraphCitation
    }
  }
}

fragment CurrentMatch on DefaultSolutionNodeMatch {
  ...SolutionNodeMatch
  maybeExplanation {
    ...SolNodeMatchExplanation
  }
}

query MatchingReviewUserSolution($exerciseId: Int!, $username: String!) {
  exercise(exerciseId: $exerciseId) {
    userSolution(username: $username) {
      userSolutionNodes: nodes {
        ...FlatUserSolutionNode
      }
      goldStandardMatches: matches {
        ...SolutionNodeMatch
      }
      matches: performCurrentCorrection {
        ...CurrentMatch
      }
    }
  }
}

query ParagraphMatchingReviewUserSolution($exerciseId: Int!, $username: String!) {
  exercise(exerciseId: $exerciseId) {
    userSolution(username: $username) {
      userSolutionNodes: nodes {
        ...FlatUserSolutionNode
      }
      goldStandardMatches: matches {
        ...SolutionNodeMatch
      }
      matches: onlyParagraphMatchingCorrection {
        ...CurrentMatch
      }
    }
  }
}
