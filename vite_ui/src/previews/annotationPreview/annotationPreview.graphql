# given exerciseId, get sample solution and all usernames for solutions

fragment UserSelectionExerciseData on Exercise {
  sampleSolutionNodes: sampleSolution {
    ...MatchingReviewSolNode
  }
  usernames: userSolutions {
    username
  }
}

query AnnotationUsernameSelectionData($exerciseId: Int!) {
  exercise(exerciseId: $exerciseId) {
    ...UserSelectionExerciseData
  }
}

# given exerciseId & username, select user solution

fragment MatchingReviewSolNode on SolutionNode {
  ...PreviewSolNode
  paragraphCitationLocations {
    ...ParagraphCitationLocation
  }
}

query AnnotationUserSolutionData($exerciseId: Int!, $username: String!) {
  exercise(exerciseId: $exerciseId) {
    userSolution(username: $username) {
      userSolutionNodes: nodes {
        ...MatchingReviewSolNode
      }
      correctionResult: performCurrentCorrection {
        ...CorrectionResult
      }
    }
  }
}

query AddSubTreeMatch($exerciseId: Int!, $username: String!, $sampleNodeId: Int!, $userNodeId: Int!) {
  exercise(exerciseId: $exerciseId) {
    userSolution(username: $username) {
      node(userSolutionNodeId: $userNodeId) {
        addAnnotationPreviewMatch(sampleSolutionNodeId: $sampleNodeId) {
          newMatches: matches {
            ...DefaultSolutionNodeMatch
          }
          newAnnotations: annotations {
            ...GeneratedAnnotation
          }
        }
      }
    }
  }
}
